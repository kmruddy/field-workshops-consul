#!/bin/bash

# This is the setup script for the workstation container. Use it to set the stage for your terraform training, demo, or lab.
set -e

# refresh Terraform Outputs
cd /root/terraform/vnet && terraform refresh
cd /root/terraform/consul-server/ && terraform refresh
cd /root/terraform/vault/ && terraform refresh
cd /root/terraform/bigip/ && terraform refresh
cd /root/terraform/panw-vm/ && terraform refresh

# add remote backend for Palo Alto Firewall setup
cat << EOF > /root/terraform/app/remote_backend.tf
terraform {
  cloud {
    hostname = "app.terraform.io"
    organization = "${ORG}"
    workspaces {
      name = "deploy-app-environments"
    }
  }
}
EOF

# Allow instruqt time to do its thing
sleep 10

#nginx
cd /root/terraform/panw-vm/
app_addr=$(echo $(terraform output WebFQDN) | tr -d '"')
cat << EOF > /etc/nginx/conf.d/app.conf
server {
  listen 8080;
  location / {
    proxy_pass ${app_addr};
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
  access_log /var/log/nginx/app.log;
}
EOF
/usr/sbin/service nginx reload

#tf vars
cd /root/terraform/consul-server/
consul_server_ip=$(echo $(terraform output consul_server_ip) | tr -d '"')
consul_lb=$(echo $(terraform output consul_external_ip) | tr -d '"')
echo "export CONSUL_HTTP_ADDR=${consul_lb}" >> ~/.bashrc
cd /root/terraform/bigip/
bigip_mgmt_addr=$(echo $(terraform output mgmt_ip) | tr -d '"')
vip_internal_address=$(echo $(terraform output vip_internal_address) | tr -d '"')
cat << EOF > /root/terraform/app/terraform.auto.tfvars
ssh_public_key = "$(cat ~/.ssh/id_rsa.pub)"
bigip_mgmt_addr = "${bigip_mgmt_addr}"
vip_internal_address = "${vip_internal_address}"
consul_server_ip = "${consul_server_ip}"
EOF

#dirs
set-workdir /root/terraform/app
cd /root/terraform/app

exit 0
